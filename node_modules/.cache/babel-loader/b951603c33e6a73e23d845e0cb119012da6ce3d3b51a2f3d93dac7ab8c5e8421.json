{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index8.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, p as parseMinParts, o as parseMaxParts, q as parseDate, w as warnIfValueOutOfBounds, r as convertToArrayOfNumbers, s as convertDataToISO, t as getToday, u as getClosestValidDate, x as getNumDaysInMonth, y as getCombinedDateColumnData, z as getMonthColumnData, A as getDayColumnData, B as getYearColumnData, C as isMonthFirstLocale, D as getTimeColumnsData, E as isLocaleDayPeriodRTL, F as getMonthAndYear, G as getDaysOfWeek, H as getDaysOfMonth, I as generateMonths, J as is24Hour, K as getLocalizedTime, L as getMonthAndDay, M as formatValue, N as getNextYear, O as getPreviousYear, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find(parts => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, _ref) => {\n  let {\n    minParts,\n    maxParts\n  } = _ref;\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts\n  });\n};\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\nconst Datetime = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    /**\n     * Duplicate reference to `activeParts` that does not trigger a re-render of the component.\n     * Allows caching an instance of the `activeParts` in between render cycles.\n     */\n    this.activePartsClone = [];\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. This will include both the slotted title, and\n     * the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    this.preferWheel = false;\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date in\n     * \"activePartsClone\" and then falling back to\n     * defaultParts if no active date is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const {\n        defaultParts\n      } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const {\n        activePartsClone\n      } = this;\n      return Array.isArray(activePartsClone) ? activePartsClone[0] : activePartsClone;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = parts => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = function (parts) {\n      let removeDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const {\n        multiple,\n        minParts,\n        maxParts,\n        activePartsClone\n      } = _this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      _this.setWorkingParts(validatedParts);\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          _this.activeParts = activePartsArray.filter(p => !isSameDay(p, validatedParts));\n        } else {\n          _this.activeParts = [...activePartsArray, validatedParts];\n        }\n      } else {\n        _this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = _this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || _this.showDefaultButtons) {\n        return;\n      }\n      _this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = ev => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', ev => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = currentMonth => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const {\n        day\n      } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const {\n        min,\n        defaultParts\n      } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const {\n        max,\n        defaultParts\n      } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = parts => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter) return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month) return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate) return;\n          const {\n            month,\n            day,\n            year\n          } = newDate;\n          if (isMonthDisabled({\n            month,\n            year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n              month,\n              day: day,\n              year\n            }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const {\n        destroyCalendarListener,\n        destroyKeyboardMO\n      } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = value => {\n      /**\n       * TODO FW-2646 remove value !== ''\n       */\n      const hasValue = value !== '' && value !== null && value !== undefined;\n      let valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const {\n        minParts,\n        maxParts,\n        multiple\n      } = this;\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset\n      } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm\n      });\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        } else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            tzOffset,\n            ampm\n          };\n        }\n      } else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    const {\n      value,\n      minParts,\n      maxParts,\n      workingParts,\n      multiple\n    } = this;\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        } else {\n          const {\n            month,\n            day,\n            year,\n            hour,\n            minute\n          } = valueDateParts;\n          const ampm = hour != null ? hour >= 12 ? 'pm' : 'am' : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm\n          });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n            ampm\n          }));\n        }\n      } else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({\n      value\n    });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm() {\n    let closeOverlay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const {\n      isCalendarPicker,\n      activeParts\n    } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker.\n     */\n    if (activeParts !== undefined || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      } else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map(str => new Date(str));\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        } else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel() {\n    let closeOverlay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const {\n      presentation\n    } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = entries => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, {\n      threshold: 0.01\n    });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = entries => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, {\n      threshold: 0\n    });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', ev => ev.stopPropagation());\n    root.addEventListener('ionBlur', ev => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const {\n      presentation,\n      prevPresentation,\n      calendarBodyRef,\n      minParts,\n      preferWheel\n    } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const {\n      el,\n      multiple,\n      presentation,\n      preferWheel\n    } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    this.processMinParts();\n    this.processMaxParts();\n    const hourValues = this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    const minuteValues = this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    const monthValues = this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    const yearValues = this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    const dayValues = this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    const todayParts = this.todayParts = parseDate(getToday());\n    this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const {\n      showDefaultButtons,\n      showClearButton\n    } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return h(\"div\", {\n      class: \"datetime-footer\"\n    }, h(\"div\", {\n      class: \"datetime-buttons\"\n    }, h(\"div\", {\n      class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      }\n    }, h(\"slot\", {\n      name: \"buttons\"\n    }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n      id: \"cancel-button\",\n      color: this.color,\n      onClick: () => this.cancel(true)\n    }, this.cancelText), h(\"div\", null, showClearButton && h(\"ion-button\", {\n      id: \"clear-button\",\n      color: this.color,\n      onClick: () => clearButtonClick()\n    }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n      id: \"confirm-button\",\n      color: this.color,\n      onClick: () => this.confirm(true)\n    }, this.doneText)))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker() {\n    let forcePresentation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.presentation;\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const {\n      defaultParts,\n      workingParts,\n      locale,\n      minParts,\n      maxParts,\n      todayParts,\n      isDateEnabled\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), {\n          disabled\n        });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null ? `${workingParts.year}-${workingParts.month}-${workingParts.day}` : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return h(\"ion-picker-column-internal\", {\n      class: \"date-column\",\n      color: this.color,\n      items: items,\n      value: todayString,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const {\n          value\n        } = ev.detail;\n        const findPart = parts.find(_ref2 => {\n          let {\n            month,\n            day,\n            year\n          } = _ref2;\n          return value === `${year}-${month}-${day}`;\n        });\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const {\n      workingParts,\n      isDateEnabled\n    } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n    if (isDateEnabled) {\n      days = days.map(dayObject => {\n        const {\n          value\n        } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), {\n          disabled\n        });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, {\n      month: 'numeric',\n      day: 'numeric'\n    });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n    } else {\n      renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const {\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"day-column\",\n      color: this.color,\n      items: days,\n      value: (_a = workingParts.day !== null ? workingParts.day : this.defaultParts.day) !== null && _a !== void 0 ? _a : undefined,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          day: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          day: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const {\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"month-column\",\n      color: this.color,\n      items: months,\n      value: workingParts.month,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          month: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          month: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const {\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"year-column\",\n      color: this.color,\n      items: years,\n      value: workingParts.year,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          year: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          year: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const {\n      hoursData,\n      minutesData,\n      dayPeriodData\n    } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n  }\n  renderHourPickerColumn(hoursData) {\n    const {\n      workingParts\n    } = this;\n    if (hoursData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      value: activePart.hour,\n      items: hoursData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          hour: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          hour: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderMinutePickerColumn(minutesData) {\n    const {\n      workingParts\n    } = this;\n    if (minutesData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      value: activePart.minute,\n      items: minutesData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          minute: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          minute: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const {\n      workingParts\n    } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return h(\"ion-picker-column-internal\", {\n      style: isDayPeriodRTL ? {\n        order: '-1'\n      } : {},\n      color: this.color,\n      value: activePart.ampm,\n      items: dayPeriodData,\n      onIonChange: ev => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderWheelView(forcePresentation) {\n    const {\n      locale\n    } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return h(\"div\", {\n      class: {\n        [`wheel-order-${columnOrder}`]: true\n      }\n    }, this.renderWheelPicker(forcePresentation));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return h(\"div\", {\n      class: \"calendar-header\"\n    }, h(\"div\", {\n      class: \"calendar-action-buttons\"\n    }, h(\"div\", {\n      class: \"calendar-month-year\"\n    }, h(\"ion-item\", {\n      button: true,\n      detail: false,\n      lines: \"none\",\n      onClick: () => this.toggleMonthAndYearView()\n    }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", {\n      \"aria-hidden\": \"true\",\n      icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n      lazy: false,\n      flipRtl: true\n    })))), h(\"div\", {\n      class: \"calendar-next-prev\"\n    }, h(\"ion-buttons\", null, h(\"ion-button\", {\n      \"aria-label\": \"previous month\",\n      disabled: prevMonthDisabled,\n      onClick: () => this.prevMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronBack,\n      lazy: false,\n      flipRtl: true\n    })), h(\"ion-button\", {\n      \"aria-label\": \"next month\",\n      disabled: nextMonthDisabled,\n      onClick: () => this.nextMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronForward,\n      lazy: false,\n      flipRtl: true\n    }))))), h(\"div\", {\n      class: \"calendar-days-of-week\",\n      \"aria-hidden\": \"true\"\n    }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", {\n        class: \"day-of-week\"\n      }, d);\n    })));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), {\n        day: null\n      }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), {\n        day: null\n      })\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"div\", {\n      \"aria-hidden\": !isWorkingMonth ? 'true' : null,\n      class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n      }\n    }, h(\"div\", {\n      class: \"calendar-month-grid\"\n    }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const {\n        day,\n        dayOfWeek\n      } = dateObject;\n      const {\n        isDateEnabled,\n        multiple\n      } = this;\n      const referenceParts = {\n        month,\n        day,\n        year\n      };\n      const isCalendarPadding = day === null;\n      const {\n        isActive,\n        isToday,\n        ariaLabel,\n        ariaSelected,\n        disabled,\n        text\n      } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n      return h(\"button\", {\n        tabindex: \"-1\",\n        \"data-day\": day,\n        \"data-month\": month,\n        \"data-year\": year,\n        \"data-index\": index,\n        \"data-day-of-week\": dayOfWeek,\n        disabled: isCalDayDisabled,\n        class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday\n        },\n        \"aria-hidden\": isCalendarPadding ? 'true' : null,\n        \"aria-selected\": ariaSelected,\n        \"aria-label\": ariaLabel,\n        onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n            month,\n            day,\n            year\n          }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year\n            }, isActive);\n          } else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n              month,\n              day,\n              year\n            }));\n          }\n        }\n      }, text);\n    })));\n  }\n  renderCalendarBody() {\n    return h(\"div\", {\n      class: \"calendar-body ion-focusable\",\n      ref: el => this.calendarBodyRef = el,\n      tabindex: \"0\"\n    }, generateMonths(this.workingParts).map(_ref3 => {\n      let {\n        month,\n        year\n      } = _ref3;\n      return this.renderMonth(month, year);\n    }));\n  }\n  renderCalendar(mode) {\n    return h(\"div\", {\n      class: \"datetime-calendar\",\n      key: \"datetime-calendar\"\n    }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", {\n      name: \"time-label\"\n    }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [h(\"div\", {\n      class: \"time-header\"\n    }, this.renderTimeLabel()), h(\"button\", {\n      class: {\n        'time-body': true,\n        'time-body-active': this.isTimePopoverOpen\n      },\n      \"aria-expanded\": \"false\",\n      \"aria-haspopup\": \"true\",\n      onClick: async ev => {\n        const {\n          popoverRef\n        } = this;\n        if (popoverRef) {\n          this.isTimePopoverOpen = true;\n          popoverRef.present(new CustomEvent('ionShadowTarget', {\n            detail: {\n              ionShadowTarget: ev.target\n            }\n          }));\n          await popoverRef.onWillDismiss();\n          this.isTimePopoverOpen = false;\n        }\n      }\n    }, getLocalizedTime(this.locale, activePart, use24Hour)), h(\"ion-popover\", {\n      alignment: \"center\",\n      translucent: true,\n      overlayIndex: 1,\n      arrow: false,\n      onWillPresent: ev => {\n        /**\n         * Intersection Observers do not consistently fire between Blink and Webkit\n         * when toggling the visibility of the popover and trying to scroll the picker\n         * column to the correct time value.\n         *\n         * This will correctly scroll the element position to the correct time value,\n         * before the popover is fully presented.\n         */\n        const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n        // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n        cols.forEach(col => col.scrollActiveItemIntoView());\n      },\n      style: {\n        '--offset-y': '-10px',\n        '--min-width': 'fit-content'\n      },\n      // Allow native browser keyboard events to support up/down/home/end key\n      // navigation within the time picker.\n      keyboardEvents: true,\n      ref: el => this.popoverRef = el\n    }, this.renderWheelPicker('time'))];\n  }\n  getHeaderSelectedDateText() {\n    const {\n      activeParts,\n      multiple,\n      titleSelectedDatesFormatter\n    } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        } catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    } else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n    }\n    return headerText;\n  }\n  renderHeader() {\n    let showExpandedHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return h(\"div\", {\n      class: \"datetime-header\"\n    }, h(\"div\", {\n      class: \"datetime-title\"\n    }, h(\"slot\", {\n      name: \"title\"\n    }, \"Select Date\")), showExpandedHeader && h(\"div\", {\n      class: \"datetime-selected-date\"\n    }, this.getHeaderSelectedDateText()));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const {\n      presentation\n    } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return h(\"div\", {\n      class: \"datetime-time\"\n    }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", {\n      class: \"datetime-year\"\n    }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n      case 'time-date':\n        return [this.renderHeader(), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n    }\n  }\n  render() {\n    const {\n      name,\n      value,\n      disabled,\n      el,\n      color,\n      isPresented,\n      readonly,\n      showMonthAndYear,\n      preferWheel,\n      presentation,\n      size\n    } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return h(Host, {\n      \"aria-disabled\": disabled ? 'true' : null,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid\n      }))\n    }, this.renderDatetime(mode));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"],\n      \"min\": [\"minChanged\"],\n      \"max\": [\"maxChanged\"],\n      \"yearValues\": [\"yearValuesChanged\"],\n      \"monthValues\": [\"monthValuesChanged\"],\n      \"dayValues\": [\"dayValuesChanged\"],\n      \"hourValues\": [\"hourValuesChanged\"],\n      \"minuteValues\": [\"minuteValuesChanged\"],\n      \"activeParts\": [\"activePartsChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: datetimeIosCss,\n      md: datetimeMdCss\n    };\n  }\n}, [33, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"titleSelectedDatesFormatter\": [16],\n  \"multiple\": [4],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isPresented\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n        break;\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n        break;\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n        break;\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n        break;\n      case \"ion-label\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ion-picker-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","a","chevronBack","f","chevronForward","c","chevronDown","g","caretUpSharp","caretDownSharp","b","getIonMode","startFocusVisible","r","raf","e","renderHiddenInput","getElementRoot","p","printIonWarning","printIonError","i","isRTL","createColorClasses","generateDayAriaLabel","getDay","isBefore","isAfter","isSameDay","d","getPreviousMonth","getNextMonth","v","validateParts","getPartsFromCalendarDay","getEndOfWeek","j","getStartOfWeek","k","getPreviousDay","l","getNextDay","m","getPreviousWeek","n","getNextWeek","parseMinParts","o","parseMaxParts","q","parseDate","w","warnIfValueOutOfBounds","convertToArrayOfNumbers","s","convertDataToISO","t","getToday","u","getClosestValidDate","x","getNumDaysInMonth","y","getCombinedDateColumnData","z","getMonthColumnData","A","getDayColumnData","B","getYearColumnData","C","isMonthFirstLocale","D","getTimeColumnsData","E","isLocaleDayPeriodRTL","F","getMonthAndYear","G","getDaysOfWeek","H","getDaysOfMonth","I","generateMonths","J","is24Hour","K","getLocalizedTime","L","getMonthAndDay","M","formatValue","N","getNextYear","O","getPreviousYear","P","clampDate","Q","parseAmPm","R","calculateHourFromAMPM","defineCustomElement$c","defineCustomElement$b","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","text","isMonthDisabled","_ref","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","datetimeIosCss","datetimeMdCss","Datetime","constructor","_this","this","__registerHost","__attachShadow","ionCancel","ionChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","activePartsClone","showMonthAndYear","workingParts","month","hour","minute","ampm","isPresented","isTimePopoverOpen","color","name","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","multiple","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","preferWheel","getActivePartsWithFallback","_a","defaultParts","getActivePart","closeParentOverlay","popoverOrModal","el","closest","dismiss","setWorkingParts","setActiveParts","removeDate","arguments","length","validatedParts","filter","hasSlottedButtons","querySelector","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","padding","querySelectorAll","dayEl","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","elementAtCenter","elementFromPoint","width","height","monthBox","Math","abs","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","value","hasValue","valueToProcess","singleValue","tzOffset","onFocus","emit","onBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","disabledChanged","emitStyle","minChanged","maxChanged","yearValuesChanged","parsedYearValues","yearValues","monthValuesChanged","parsedMonthValues","monthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","hourValues","minuteValuesChanged","parsedMinuteValues","minuteValues","activePartsChanged","valueChanged","valueDateParts","closeOverlay","isCalendarPicker","activePartsIsArray","dates","map","str","Date","getTimezoneOffset","date","reset","startDate","cancel","connectedCallback","clearFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","componentDidRender","hasCalendarGrid","componentWillLoad","interactive","datetime","renderFooter","clearButtonClick","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","isDateEnabled","activePart","monthsToRender","lastMonth","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","_ref2","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","userHasSelectedDate","hoursData","minutesData","dayPeriodData","hourCycle","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","button","lines","icon","lazy","flipRtl","dir","slot","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","isCalendarPadding","isCalDayDisabled","tabindex","renderCalendarBody","ref","_ref3","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","use24Hour","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","titleSelectedDatesFormatter","headerText","renderHeader","showExpandedHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasDatePresentation","hasGrid","watchers","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["/Users/aliciamedina/Library/Mobile Documents/com~apple~CloudDocs/Work/Proyecto Fin Grado/Electron/Ionic/Chatty-iOS/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { p as printIonWarning, a as printIonError } from './index8.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getEndOfWeek, j as getStartOfWeek, k as getPreviousDay, l as getNextDay, m as getPreviousWeek, n as getNextWeek, p as parseMinParts, o as parseMaxParts, q as parseDate, w as warnIfValueOutOfBounds, r as convertToArrayOfNumbers, s as convertDataToISO, t as getToday, u as getClosestValidDate, x as getNumDaysInMonth, y as getCombinedDateColumnData, z as getMonthColumnData, A as getDayColumnData, B as getYearColumnData, C as isMonthFirstLocale, D as getTimeColumnsData, E as isLocaleDayPeriodRTL, F as getMonthAndYear, G as getDaysOfWeek, H as getDaysOfMonth, I as generateMonths, J as is24Hour, K as getLocalizedTime, L as getMonthAndDay, M as formatValue, N as getNextYear, O as getPreviousYear, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null,\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:16px;font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:12px;font-weight:600;line-height:24px;text-transform:uppercase}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;height:calc(100% - 16px)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .calendar-day{font-size:20px}:host .calendar-day:after{opacity:0.2}:host .calendar-day:focus:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-active:after{background:var(--ion-color-base)}:host .calendar-day.calendar-day-today.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-today.calendar-day-active:after{background:var(--ion-color-base);opacity:1}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:16px;font-size:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px;position:absolute;visibility:hidden;pointer-events:none}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-readonly),:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled){opacity:0.4}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .calendar-action-buttons ion-item ion-icon{padding-left:4px;padding-right:0;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-action-buttons ion-item ion-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day{padding-left:0px;padding-right:0px;padding-top:0px;padding-bottom:0px;margin-left:0px;margin-right:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{margin-left:unset;margin-right:unset;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px}}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}:host .calendar-day:after{border-radius:32px;padding-left:4px;padding-right:4px;padding-top:4px;padding-bottom:4px;position:absolute;top:50%;left:50%;width:32px;height:32px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\" \\\";z-index:-1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day:after{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .time-body{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-header{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}:host .datetime-header .datetime-title{font-size:12px;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:34px}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{padding-left:10px;padding-right:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:14px;line-height:36px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-days-of-week{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-body .calendar-month .calendar-month-grid{padding-left:10px;padding-right:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-body .calendar-month .calendar-month-grid{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .calendar-day{padding-left:0px;padding-right:0;padding-top:13px;padding-bottom:13px;font-size:14px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .calendar-day{padding-left:unset;padding-right:unset;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0;padding-inline-end:0}}:host .calendar-day:focus:after{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-today:after{border:1px solid var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}:host .calendar-day.calendar-day-active:after{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{padding-left:16px;padding-right:16px;padding-top:8px;padding-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-time{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{padding-left:10px;padding-right:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host .datetime-buttons{padding-left:unset;padding-right:unset;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}}:host .datetime-view-buttons ion-button{color:var(--ion-color-step-800, #333333)}\";\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    /**\n     * Duplicate reference to `activeParts` that does not trigger a re-render of the component.\n     * Allows caching an instance of the `activeParts` in between render cycles.\n     */\n    this.activePartsClone = [];\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. This will include both the slotted title, and\n     * the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    this.preferWheel = false;\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date in\n     * \"activePartsClone\" and then falling back to\n     * defaultParts if no active date is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const { defaultParts } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const { activePartsClone } = this;\n      return Array.isArray(activePartsClone) ? activePartsClone[0] : activePartsClone;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const { multiple, minParts, maxParts, activePartsClone } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n        }\n        else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      }\n      else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const { min, defaultParts } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const { max, defaultParts } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = (parts) => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter)\n            return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month)\n            return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2)\n            return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          }\n          else if (month === endMonth) {\n            return getNextMonth(parts);\n          }\n          else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate)\n            return;\n          const { month, day, year } = newDate;\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarListener, destroyKeyboardMO } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = (value) => {\n      /**\n       * TODO FW-2646 remove value !== ''\n       */\n      const hasValue = value !== '' && value !== null && value !== undefined;\n      let valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const { minParts, maxParts, multiple } = this;\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const { month, day, year, hour, minute, tzOffset } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm,\n      });\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        }\n        else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            tzOffset,\n            ampm,\n          };\n        }\n      }\n      else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    const { value, minParts, maxParts, workingParts, multiple } = this;\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        }\n        else {\n          const { month, day, year, hour, minute } = valueDateParts;\n          const ampm = hour != null ? (hour >= 12 ? 'pm' : 'am') : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm }));\n        }\n      }\n      else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const { isCalendarPicker, activeParts } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker.\n     */\n    if (activeParts !== undefined || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      }\n      else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map((str) => new Date(str));\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        }\n        else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const { el, multiple, presentation, preferWheel } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    this.processMinParts();\n    this.processMaxParts();\n    const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n    const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n    const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n    const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n    const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n    const todayParts = (this.todayParts = parseDate(getToday()));\n    this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", null, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date'\n      ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n      : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n      ? this.renderCombinedDatePickerColumn()\n      : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const { defaultParts, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), { disabled });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null\n      ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n      : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, items: items, value: todayString, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const { value } = ev.detail;\n        const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const { workingParts, isDateEnabled } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths\n      ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n      : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays\n      ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n      : [];\n    if (isDateEnabled) {\n      days = days.map((dayObject) => {\n        const { value } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year,\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), { disabled });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears\n      ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n      : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [\n        this.renderMonthPickerColumn(months),\n        this.renderDayPickerColumn(days),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    else {\n      renderArray = [\n        this.renderDayPickerColumn(days),\n        this.renderMonthPickerColumn(months),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, items: days, value: (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [\n      this.renderHourPickerColumn(hoursData),\n      this.renderMinutePickerColumn(minutesData),\n      this.renderDayPeriodPickerColumn(dayPeriodData),\n    ];\n  }\n  renderHourPickerColumn(hoursData) {\n    const { workingParts } = this;\n    if (hoursData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const { workingParts } = this;\n    if (minutesData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const { workingParts } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, value: activePart.ampm, items: dayPeriodData, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderWheelView(forcePresentation) {\n    const { locale } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: {\n        [`wheel-order-${columnOrder}`]: true,\n      } }, this.renderWheelPicker(forcePresentation)));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { isDateEnabled, multiple } = this;\n      const referenceParts = { month, day, year };\n      const isCalendarPadding = day === null;\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled, text } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n      }\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday,\n        }, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year,\n            }, isActive);\n          }\n          else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n              day,\n              year }));\n          }\n        } }, text));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen,\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getLocalizedTime(this.locale, activePart, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n    ];\n  }\n  getHeaderSelectedDateText() {\n    const { activeParts, multiple, titleSelectedDatesFormatter } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        }\n        catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    }\n    else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n    }\n    return headerText;\n  }\n  renderHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const { presentation, preferWheel } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderHeader(),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [\n          this.renderHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, preferWheel, presentation, size, } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid,\n      })) }, this.renderDatetime(mode)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"],\n    \"min\": [\"minChanged\"],\n    \"max\": [\"maxChanged\"],\n    \"yearValues\": [\"yearValuesChanged\"],\n    \"monthValues\": [\"monthValuesChanged\"],\n    \"dayValues\": [\"dayValuesChanged\"],\n    \"hourValues\": [\"hourValuesChanged\"],\n    \"minuteValues\": [\"minuteValuesChanged\"],\n    \"activeParts\": [\"activePartsChanged\"],\n    \"value\": [\"valueChanged\"]\n  }; }\n  static get style() { return {\n    ios: datetimeIosCss,\n    md: datetimeMdCss\n  }; }\n}, [33, \"ion-datetime\", {\n    \"color\": [1],\n    \"name\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"isDateEnabled\": [16],\n    \"min\": [1025],\n    \"max\": [1025],\n    \"presentation\": [1],\n    \"cancelText\": [1, \"cancel-text\"],\n    \"doneText\": [1, \"done-text\"],\n    \"clearText\": [1, \"clear-text\"],\n    \"yearValues\": [8, \"year-values\"],\n    \"monthValues\": [8, \"month-values\"],\n    \"dayValues\": [8, \"day-values\"],\n    \"hourValues\": [8, \"hour-values\"],\n    \"minuteValues\": [8, \"minute-values\"],\n    \"locale\": [1],\n    \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n    \"titleSelectedDatesFormatter\": [16],\n    \"multiple\": [4],\n    \"value\": [1025],\n    \"showDefaultTitle\": [4, \"show-default-title\"],\n    \"showDefaultButtons\": [4, \"show-default-buttons\"],\n    \"showClearButton\": [4, \"show-clear-button\"],\n    \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n    \"hourCycle\": [1, \"hour-cycle\"],\n    \"size\": [1],\n    \"preferWheel\": [4, \"prefer-wheel\"],\n    \"showMonthAndYear\": [32],\n    \"activeParts\": [32],\n    \"workingParts\": [32],\n    \"isPresented\": [32],\n    \"isTimePopoverOpen\": [32],\n    \"confirm\": [64],\n    \"reset\": [64],\n    \"cancel\": [64]\n  }]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-datetime\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Datetime);\n      }\n      break;\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$c();\n      }\n      break;\n    case \"ion-button\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$b();\n      }\n      break;\n    case \"ion-buttons\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$a();\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$9();\n      }\n      break;\n    case \"ion-item\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$8();\n      }\n      break;\n    case \"ion-label\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$7();\n      }\n      break;\n    case \"ion-note\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$6();\n      }\n      break;\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$5();\n      }\n      break;\n    case \"ion-picker-internal\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$4();\n      }\n      break;\n    case \"ion-popover\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$3();\n      }\n      break;\n    case \"ion-ripple-effect\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
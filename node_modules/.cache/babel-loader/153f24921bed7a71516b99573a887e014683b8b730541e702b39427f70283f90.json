{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, readTask, writeTask, forceUpdate, h, Host } from '@stencil/core/internal/client';\nimport { c as componentOnReady } from './helpers.js';\nconst CELL_TYPE_ITEM = 'item';\nconst CELL_TYPE_HEADER = 'header';\nconst CELL_TYPE_FOOTER = 'footer';\nconst NODE_CHANGE_NONE = 0;\nconst NODE_CHANGE_POSITION = 1;\nconst NODE_CHANGE_CELL = 2;\nconst MIN_READS = 2;\nconst updateVDom = (dom, heightIndex, cells, range) => {\n  // reset dom\n  for (const node of dom) {\n    node.change = NODE_CHANGE_NONE;\n    node.d = true;\n  }\n  // try to match into exisiting dom\n  const toMutate = [];\n  const end = range.offset + range.length;\n  for (let i = range.offset; i < end; i++) {\n    const cell = cells[i];\n    const node = dom.find(n => n.d && n.cell === cell);\n    if (node) {\n      const top = heightIndex[i];\n      if (top !== node.top) {\n        node.top = top;\n        node.change = NODE_CHANGE_POSITION;\n      }\n      node.d = false;\n    } else {\n      toMutate.push(cell);\n    }\n  }\n  // needs to append\n  const pool = dom.filter(n => n.d);\n  for (const cell of toMutate) {\n    const node = pool.find(n => n.d && n.cell.type === cell.type);\n    const index = cell.i;\n    if (node) {\n      node.d = false;\n      node.change = NODE_CHANGE_CELL;\n      node.cell = cell;\n      node.top = heightIndex[index];\n    } else {\n      dom.push({\n        d: false,\n        cell,\n        visible: true,\n        change: NODE_CHANGE_CELL,\n        top: heightIndex[index]\n      });\n    }\n  }\n  dom.filter(n => n.d && n.top !== -9999).forEach(n => {\n    n.change = NODE_CHANGE_POSITION;\n    n.top = -9999;\n  });\n};\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\n  var _a;\n  const children = Array.from(el.children).filter(n => n.tagName !== 'TEMPLATE');\n  const childrenNu = children.length;\n  let child;\n  for (let i = 0; i < dom.length; i++) {\n    const node = dom[i];\n    const cell = node.cell;\n    // the cell change, the content must be updated\n    if (node.change === NODE_CHANGE_CELL) {\n      if (i < childrenNu) {\n        child = children[i];\n        nodeRender(child, cell, i);\n      } else {\n        const newChild = createNode(el, cell.type);\n        child = (_a = nodeRender(newChild, cell, i)) !== null && _a !== void 0 ? _a : newChild;\n        child.classList.add('virtual-item');\n        el.appendChild(child);\n      }\n      child['$ionCell'] = cell;\n    } else {\n      child = children[i];\n    }\n    // only update position when it changes\n    if (node.change !== NODE_CHANGE_NONE) {\n      child.style.transform = `translate3d(0,${node.top}px,0)`;\n    }\n    // update visibility\n    const visible = cell.visible;\n    if (node.visible !== visible) {\n      if (visible) {\n        child.classList.remove('virtual-loading');\n      } else {\n        child.classList.add('virtual-loading');\n      }\n      node.visible = visible;\n    }\n    // dynamic height\n    if (cell.reads > 0) {\n      updateCellHeight(cell, child);\n      cell.reads--;\n    }\n  }\n};\nconst createNode = (el, type) => {\n  const template = getTemplate(el, type);\n  if (template && el.ownerDocument !== null) {\n    return el.ownerDocument.importNode(template.content, true).children[0];\n  }\n  return null;\n};\nconst getTemplate = (el, type) => {\n  switch (type) {\n    case CELL_TYPE_ITEM:\n      return el.querySelector('template:not([name])');\n    case CELL_TYPE_HEADER:\n      return el.querySelector('template[name=header]');\n    case CELL_TYPE_FOOTER:\n      return el.querySelector('template[name=footer]');\n  }\n};\nconst getViewport = (scrollTop, vierportHeight, margin) => {\n  return {\n    top: Math.max(scrollTop - margin, 0),\n    bottom: scrollTop + vierportHeight + margin\n  };\n};\nconst getRange = (heightIndex, viewport, buffer) => {\n  const topPos = viewport.top;\n  const bottomPos = viewport.bottom;\n  // find top index\n  let i = 0;\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] > topPos) {\n      break;\n    }\n  }\n  const offset = Math.max(i - buffer - 1, 0);\n  // find bottom index\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] >= bottomPos) {\n      break;\n    }\n  }\n  const end = Math.min(i + buffer, heightIndex.length);\n  const length = end - offset;\n  return {\n    offset,\n    length\n  };\n};\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\n  const end = range.offset + range.length;\n  return dirtyIndex <= end || currentRange.offset !== range.offset || currentRange.length !== range.length;\n};\nconst findCellIndex = (cells, index) => {\n  const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n  if (index === 0) {\n    return 0;\n  } else if (index === max + 1) {\n    return cells.length;\n  } else {\n    return cells.findIndex(c => c.index === index);\n  }\n};\nconst inplaceUpdate = (dst, src, offset) => {\n  if (offset === 0 && src.length >= dst.length) {\n    return src;\n  }\n  for (let i = 0; i < src.length; i++) {\n    dst[i + offset] = src[i];\n  }\n  return dst;\n};\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\n  const cells = [];\n  const end = len + offset;\n  for (let i = offset; i < end; i++) {\n    const item = items[i];\n    if (headerFn) {\n      const value = headerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_HEADER,\n          value,\n          index: i,\n          height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n          reads: headerHeight ? 0 : MIN_READS,\n          visible: !!headerHeight\n        });\n      }\n    }\n    cells.push({\n      i: j++,\n      type: CELL_TYPE_ITEM,\n      value: item,\n      index: i,\n      height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n      reads: itemHeight ? 0 : MIN_READS,\n      visible: !!itemHeight\n    });\n    if (footerFn) {\n      const value = footerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_FOOTER,\n          value,\n          index: i,\n          height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n          reads: footerHeight ? 0 : MIN_READS,\n          visible: !!footerHeight\n        });\n      }\n    }\n  }\n  return cells;\n};\nconst calcHeightIndex = (buf, cells, index) => {\n  let acum = buf[index];\n  for (let i = index; i < buf.length; i++) {\n    buf[i] = acum;\n    acum += cells[i].height;\n  }\n  return acum;\n};\nconst resizeBuffer = (buf, len) => {\n  if (!buf) {\n    return new Uint32Array(len);\n  }\n  if (buf.length === len) {\n    return buf;\n  } else if (len > buf.length) {\n    const newBuf = new Uint32Array(len);\n    newBuf.set(buf);\n    return newBuf;\n  } else {\n    return buf.subarray(0, len);\n  }\n};\nconst positionForIndex = (index, cells, heightIndex) => {\n  const cell = cells.find(c => c.type === CELL_TYPE_ITEM && c.index === index);\n  if (cell) {\n    return heightIndex[cell.i];\n  }\n  return -1;\n};\nconst virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\nconst VirtualScroll = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.range = {\n      offset: 0,\n      length: 0\n    };\n    this.viewportHeight = 0;\n    this.cells = [];\n    this.virtualDom = [];\n    this.isEnabled = false;\n    this.viewportOffset = 0;\n    this.currentScrollTop = 0;\n    this.indexDirty = 0;\n    this.lastItemLen = 0;\n    this.totalHeight = 0;\n    /**\n     * It is important to provide this\n     * if virtual item height will be significantly larger than the default\n     * The approximate height of each virtual item template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxItemHeight = 45;\n    /**\n     * The approximate height of each header template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxHeaderHeight = 30;\n    /**\n     * The approximate width of each footer template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxFooterHeight = 30;\n    this.onScroll = () => {\n      this.updateVirtualScroll();\n    };\n  }\n  itemsChanged() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  componentWillLoad() {\n    console.warn(`[Deprecation Warning]: ion-virtual-scroll has been deprecated and will be removed in Ionic Framework v7.0. See https://ionicframework.com/docs/angular/virtual-scroll for migration steps.`);\n  }\n  async connectedCallback() {\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n      return;\n    }\n    this.scrollEl = await contentEl.getScrollElement();\n    this.contentEl = contentEl;\n    this.calcCells();\n    this.updateState();\n  }\n  componentDidUpdate() {\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.scrollEl = undefined;\n  }\n  onResize() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  /**\n   * Returns the position of the virtual item at the given index.\n   */\n  positionForItem(index) {\n    return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n  }\n  /**\n   * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n   * dirty any time the content or their style changes.\n   *\n   * The subset of items to be updated can are specifying by an offset and a length.\n   */\n  async checkRange(offset) {\n    let len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    // TODO: kind of hacky how we do in-place updated of the cells\n    // array. this part needs a complete refactor\n    if (!this.items) {\n      return;\n    }\n    const length = len === -1 ? this.items.length - offset : len;\n    const cellIndex = findCellIndex(this.cells, offset);\n    const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n    this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n    this.lastItemLen = this.items.length;\n    this.indexDirty = Math.max(offset - 1, 0);\n    this.scheduleUpdate();\n  }\n  /**\n   * This method marks the tail the items array as dirty, so they can be re-rendered.\n   *\n   * It's equivalent to calling:\n   *\n   * ```js\n   * virtualScroll.checkRange(lastItemLen);\n   * ```\n   */\n  async checkEnd() {\n    if (this.items) {\n      this.checkRange(this.lastItemLen);\n    }\n  }\n  updateVirtualScroll() {\n    // do nothing if virtual-scroll is disabled\n    if (!this.isEnabled || !this.scrollEl) {\n      return;\n    }\n    // unschedule future updates\n    if (this.timerUpdate) {\n      clearTimeout(this.timerUpdate);\n      this.timerUpdate = undefined;\n    }\n    // schedule DOM operations into the stencil queue\n    readTask(this.readVS.bind(this));\n    writeTask(this.writeVS.bind(this));\n  }\n  readVS() {\n    const {\n      contentEl,\n      scrollEl,\n      el\n    } = this;\n    let topOffset = 0;\n    let node = el;\n    while (node !== null && node !== contentEl) {\n      topOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n    this.viewportOffset = topOffset;\n    if (scrollEl) {\n      this.viewportHeight = scrollEl.offsetHeight;\n      this.currentScrollTop = scrollEl.scrollTop;\n    }\n  }\n  writeVS() {\n    const dirtyIndex = this.indexDirty;\n    // get visible viewport\n    const scrollTop = this.currentScrollTop - this.viewportOffset;\n    const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n    // compute lazily the height index\n    const heightIndex = this.getHeightIndex();\n    // get array bounds of visible cells base in the viewport\n    const range = getRange(heightIndex, viewport, 2);\n    // fast path, do nothing\n    const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n    if (!shouldUpdate) {\n      return;\n    }\n    this.range = range;\n    // in place mutation of the virtual DOM\n    updateVDom(this.virtualDom, heightIndex, this.cells, range);\n    // Write DOM\n    // Different code paths taken depending of the render API used\n    if (this.nodeRender) {\n      doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n    } else if (this.domRender) {\n      this.domRender(this.virtualDom);\n    } else if (this.renderItem) {\n      forceUpdate(this);\n    }\n  }\n  updateCellHeight(cell, node) {\n    const update = () => {\n      if (node['$ionCell'] === cell) {\n        const style = window.getComputedStyle(node);\n        const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n        this.setCellHeight(cell, height);\n      }\n    };\n    if (node) {\n      componentOnReady(node, update);\n    } else {\n      update();\n    }\n  }\n  setCellHeight(cell, height) {\n    const index = cell.i;\n    // the cell might changed since the height update was scheduled\n    if (cell !== this.cells[index]) {\n      return;\n    }\n    if (cell.height !== height || cell.visible !== true) {\n      cell.visible = true;\n      cell.height = height;\n      this.indexDirty = Math.min(this.indexDirty, index);\n      this.scheduleUpdate();\n    }\n  }\n  scheduleUpdate() {\n    clearTimeout(this.timerUpdate);\n    this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n  }\n  updateState() {\n    const shouldEnable = !!(this.scrollEl && this.cells.length > 0);\n    if (shouldEnable !== this.isEnabled) {\n      this.enableScrollEvents(shouldEnable);\n      if (shouldEnable) {\n        this.updateVirtualScroll();\n      }\n    }\n  }\n  calcCells() {\n    if (!this.items) {\n      return;\n    }\n    this.lastItemLen = this.items.length;\n    this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n    this.indexDirty = 0;\n  }\n  getHeightIndex() {\n    if (this.indexDirty !== Infinity) {\n      this.calcHeightIndex(this.indexDirty);\n    }\n    return this.heightIndex;\n  }\n  calcHeightIndex() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    // TODO: optimize, we don't need to calculate all the cells\n    this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n    this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n    this.indexDirty = Infinity;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.rmEvent) {\n      this.rmEvent();\n      this.rmEvent = undefined;\n    }\n    const scrollEl = this.scrollEl;\n    if (scrollEl) {\n      this.isEnabled = shouldListen;\n      scrollEl.addEventListener('scroll', this.onScroll);\n      this.rmEvent = () => {\n        scrollEl.removeEventListener('scroll', this.onScroll);\n      };\n    }\n  }\n  renderVirtualNode(node) {\n    const {\n      type,\n      value,\n      index\n    } = node.cell;\n    switch (type) {\n      case CELL_TYPE_ITEM:\n        return this.renderItem(value, index);\n      case CELL_TYPE_HEADER:\n        return this.renderHeader(value, index);\n      case CELL_TYPE_FOOTER:\n        return this.renderFooter(value, index);\n    }\n  }\n  render() {\n    return h(Host, {\n      style: {\n        height: `${this.totalHeight}px`\n      }\n    }, this.renderItem && h(VirtualProxy, {\n      dom: this.virtualDom\n    }, this.virtualDom.map(node => this.renderVirtualNode(node))));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"itemHeight\": [\"itemsChanged\"],\n      \"headerHeight\": [\"itemsChanged\"],\n      \"footerHeight\": [\"itemsChanged\"],\n      \"items\": [\"itemsChanged\"]\n    };\n  }\n  static get style() {\n    return virtualScrollCss;\n  }\n}, [0, \"ion-virtual-scroll\", {\n  \"approxItemHeight\": [2, \"approx-item-height\"],\n  \"approxHeaderHeight\": [2, \"approx-header-height\"],\n  \"approxFooterHeight\": [2, \"approx-footer-height\"],\n  \"headerFn\": [16],\n  \"footerFn\": [16],\n  \"items\": [16],\n  \"itemHeight\": [16],\n  \"headerHeight\": [16],\n  \"footerHeight\": [16],\n  \"renderItem\": [16],\n  \"renderHeader\": [16],\n  \"renderFooter\": [16],\n  \"nodeRender\": [16],\n  \"domRender\": [16],\n  \"totalHeight\": [32],\n  \"positionForItem\": [64],\n  \"checkRange\": [64],\n  \"checkEnd\": [64]\n}, [[9, \"resize\", \"onResize\"]]]);\nconst VirtualProxy = (_ref, children, utils) => {\n  let {\n    dom\n  } = _ref;\n  return utils.map(children, (child, i) => {\n    const node = dom[i];\n    const vattrs = child.vattrs || {};\n    let classes = vattrs.class || '';\n    classes += 'virtual-item ';\n    if (!node.visible) {\n      classes += 'virtual-loading';\n    }\n    return Object.assign(Object.assign({}, child), {\n      vattrs: Object.assign(Object.assign({}, vattrs), {\n        class: classes,\n        style: Object.assign(Object.assign({}, vattrs.style), {\n          transform: `translate3d(0,${node.top}px,0)`\n        })\n      })\n    });\n  });\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-virtual-scroll\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-virtual-scroll\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, VirtualScroll);\n        }\n        break;\n    }\n  });\n}\nconst IonVirtualScroll = VirtualScroll;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonVirtualScroll, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","readTask","writeTask","forceUpdate","h","Host","c","componentOnReady","CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","node","change","d","toMutate","end","offset","length","i","cell","find","n","top","push","pool","filter","type","index","visible","forEach","doRender","el","nodeRender","updateCellHeight","_a","children","Array","from","tagName","childrenNu","child","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","virtualScrollCss","VirtualScroll","constructor","__registerHost","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","itemsChanged","componentWillLoad","console","warn","connectedCallback","contentEl","closest","error","scrollEl","getScrollElement","updateState","componentDidUpdate","disconnectedCallback","undefined","onResize","positionForItem","Promise","resolve","getHeightIndex","checkRange","arguments","cellIndex","scheduleUpdate","checkEnd","timerUpdate","clearTimeout","readVS","bind","writeVS","topOffset","offsetTop","offsetParent","offsetHeight","shouldUpdate","domRender","renderItem","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderVirtualNode","renderHeader","renderFooter","render","VirtualProxy","map","watchers","_ref","utils","vattrs","classes","class","Object","assign","defineCustomElement$1","customElements","components","get","define","IonVirtualScroll","defineCustomElement"],"sources":["/Users/aliciamedina/Library/Mobile Documents/com~apple~CloudDocs/Work/Proyecto Fin Grado/Electron/Ionic/Chatty-iOS/node_modules/@ionic/core/components/ion-virtual-scroll.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, readTask, writeTask, forceUpdate, h, Host } from '@stencil/core/internal/client';\nimport { c as componentOnReady } from './helpers.js';\n\nconst CELL_TYPE_ITEM = 'item';\nconst CELL_TYPE_HEADER = 'header';\nconst CELL_TYPE_FOOTER = 'footer';\nconst NODE_CHANGE_NONE = 0;\nconst NODE_CHANGE_POSITION = 1;\nconst NODE_CHANGE_CELL = 2;\n\nconst MIN_READS = 2;\nconst updateVDom = (dom, heightIndex, cells, range) => {\n  // reset dom\n  for (const node of dom) {\n    node.change = NODE_CHANGE_NONE;\n    node.d = true;\n  }\n  // try to match into exisiting dom\n  const toMutate = [];\n  const end = range.offset + range.length;\n  for (let i = range.offset; i < end; i++) {\n    const cell = cells[i];\n    const node = dom.find((n) => n.d && n.cell === cell);\n    if (node) {\n      const top = heightIndex[i];\n      if (top !== node.top) {\n        node.top = top;\n        node.change = NODE_CHANGE_POSITION;\n      }\n      node.d = false;\n    }\n    else {\n      toMutate.push(cell);\n    }\n  }\n  // needs to append\n  const pool = dom.filter((n) => n.d);\n  for (const cell of toMutate) {\n    const node = pool.find((n) => n.d && n.cell.type === cell.type);\n    const index = cell.i;\n    if (node) {\n      node.d = false;\n      node.change = NODE_CHANGE_CELL;\n      node.cell = cell;\n      node.top = heightIndex[index];\n    }\n    else {\n      dom.push({\n        d: false,\n        cell,\n        visible: true,\n        change: NODE_CHANGE_CELL,\n        top: heightIndex[index],\n      });\n    }\n  }\n  dom\n    .filter((n) => n.d && n.top !== -9999)\n    .forEach((n) => {\n    n.change = NODE_CHANGE_POSITION;\n    n.top = -9999;\n  });\n};\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\n  var _a;\n  const children = Array.from(el.children).filter((n) => n.tagName !== 'TEMPLATE');\n  const childrenNu = children.length;\n  let child;\n  for (let i = 0; i < dom.length; i++) {\n    const node = dom[i];\n    const cell = node.cell;\n    // the cell change, the content must be updated\n    if (node.change === NODE_CHANGE_CELL) {\n      if (i < childrenNu) {\n        child = children[i];\n        nodeRender(child, cell, i);\n      }\n      else {\n        const newChild = createNode(el, cell.type);\n        child = (_a = nodeRender(newChild, cell, i)) !== null && _a !== void 0 ? _a : newChild;\n        child.classList.add('virtual-item');\n        el.appendChild(child);\n      }\n      child['$ionCell'] = cell;\n    }\n    else {\n      child = children[i];\n    }\n    // only update position when it changes\n    if (node.change !== NODE_CHANGE_NONE) {\n      child.style.transform = `translate3d(0,${node.top}px,0)`;\n    }\n    // update visibility\n    const visible = cell.visible;\n    if (node.visible !== visible) {\n      if (visible) {\n        child.classList.remove('virtual-loading');\n      }\n      else {\n        child.classList.add('virtual-loading');\n      }\n      node.visible = visible;\n    }\n    // dynamic height\n    if (cell.reads > 0) {\n      updateCellHeight(cell, child);\n      cell.reads--;\n    }\n  }\n};\nconst createNode = (el, type) => {\n  const template = getTemplate(el, type);\n  if (template && el.ownerDocument !== null) {\n    return el.ownerDocument.importNode(template.content, true).children[0];\n  }\n  return null;\n};\nconst getTemplate = (el, type) => {\n  switch (type) {\n    case CELL_TYPE_ITEM:\n      return el.querySelector('template:not([name])');\n    case CELL_TYPE_HEADER:\n      return el.querySelector('template[name=header]');\n    case CELL_TYPE_FOOTER:\n      return el.querySelector('template[name=footer]');\n  }\n};\nconst getViewport = (scrollTop, vierportHeight, margin) => {\n  return {\n    top: Math.max(scrollTop - margin, 0),\n    bottom: scrollTop + vierportHeight + margin,\n  };\n};\nconst getRange = (heightIndex, viewport, buffer) => {\n  const topPos = viewport.top;\n  const bottomPos = viewport.bottom;\n  // find top index\n  let i = 0;\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] > topPos) {\n      break;\n    }\n  }\n  const offset = Math.max(i - buffer - 1, 0);\n  // find bottom index\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] >= bottomPos) {\n      break;\n    }\n  }\n  const end = Math.min(i + buffer, heightIndex.length);\n  const length = end - offset;\n  return { offset, length };\n};\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\n  const end = range.offset + range.length;\n  return dirtyIndex <= end || currentRange.offset !== range.offset || currentRange.length !== range.length;\n};\nconst findCellIndex = (cells, index) => {\n  const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n  if (index === 0) {\n    return 0;\n  }\n  else if (index === max + 1) {\n    return cells.length;\n  }\n  else {\n    return cells.findIndex((c) => c.index === index);\n  }\n};\nconst inplaceUpdate = (dst, src, offset) => {\n  if (offset === 0 && src.length >= dst.length) {\n    return src;\n  }\n  for (let i = 0; i < src.length; i++) {\n    dst[i + offset] = src[i];\n  }\n  return dst;\n};\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\n  const cells = [];\n  const end = len + offset;\n  for (let i = offset; i < end; i++) {\n    const item = items[i];\n    if (headerFn) {\n      const value = headerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_HEADER,\n          value,\n          index: i,\n          height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n          reads: headerHeight ? 0 : MIN_READS,\n          visible: !!headerHeight,\n        });\n      }\n    }\n    cells.push({\n      i: j++,\n      type: CELL_TYPE_ITEM,\n      value: item,\n      index: i,\n      height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n      reads: itemHeight ? 0 : MIN_READS,\n      visible: !!itemHeight,\n    });\n    if (footerFn) {\n      const value = footerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_FOOTER,\n          value,\n          index: i,\n          height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n          reads: footerHeight ? 0 : MIN_READS,\n          visible: !!footerHeight,\n        });\n      }\n    }\n  }\n  return cells;\n};\nconst calcHeightIndex = (buf, cells, index) => {\n  let acum = buf[index];\n  for (let i = index; i < buf.length; i++) {\n    buf[i] = acum;\n    acum += cells[i].height;\n  }\n  return acum;\n};\nconst resizeBuffer = (buf, len) => {\n  if (!buf) {\n    return new Uint32Array(len);\n  }\n  if (buf.length === len) {\n    return buf;\n  }\n  else if (len > buf.length) {\n    const newBuf = new Uint32Array(len);\n    newBuf.set(buf);\n    return newBuf;\n  }\n  else {\n    return buf.subarray(0, len);\n  }\n};\nconst positionForIndex = (index, cells, heightIndex) => {\n  const cell = cells.find((c) => c.type === CELL_TYPE_ITEM && c.index === index);\n  if (cell) {\n    return heightIndex[cell.i];\n  }\n  return -1;\n};\n\nconst virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\n\nconst VirtualScroll = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.range = { offset: 0, length: 0 };\n    this.viewportHeight = 0;\n    this.cells = [];\n    this.virtualDom = [];\n    this.isEnabled = false;\n    this.viewportOffset = 0;\n    this.currentScrollTop = 0;\n    this.indexDirty = 0;\n    this.lastItemLen = 0;\n    this.totalHeight = 0;\n    /**\n     * It is important to provide this\n     * if virtual item height will be significantly larger than the default\n     * The approximate height of each virtual item template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxItemHeight = 45;\n    /**\n     * The approximate height of each header template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxHeaderHeight = 30;\n    /**\n     * The approximate width of each footer template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxFooterHeight = 30;\n    this.onScroll = () => {\n      this.updateVirtualScroll();\n    };\n  }\n  itemsChanged() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  componentWillLoad() {\n    console.warn(`[Deprecation Warning]: ion-virtual-scroll has been deprecated and will be removed in Ionic Framework v7.0. See https://ionicframework.com/docs/angular/virtual-scroll for migration steps.`);\n  }\n  async connectedCallback() {\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n      return;\n    }\n    this.scrollEl = await contentEl.getScrollElement();\n    this.contentEl = contentEl;\n    this.calcCells();\n    this.updateState();\n  }\n  componentDidUpdate() {\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.scrollEl = undefined;\n  }\n  onResize() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  /**\n   * Returns the position of the virtual item at the given index.\n   */\n  positionForItem(index) {\n    return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n  }\n  /**\n   * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n   * dirty any time the content or their style changes.\n   *\n   * The subset of items to be updated can are specifying by an offset and a length.\n   */\n  async checkRange(offset, len = -1) {\n    // TODO: kind of hacky how we do in-place updated of the cells\n    // array. this part needs a complete refactor\n    if (!this.items) {\n      return;\n    }\n    const length = len === -1 ? this.items.length - offset : len;\n    const cellIndex = findCellIndex(this.cells, offset);\n    const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n    this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n    this.lastItemLen = this.items.length;\n    this.indexDirty = Math.max(offset - 1, 0);\n    this.scheduleUpdate();\n  }\n  /**\n   * This method marks the tail the items array as dirty, so they can be re-rendered.\n   *\n   * It's equivalent to calling:\n   *\n   * ```js\n   * virtualScroll.checkRange(lastItemLen);\n   * ```\n   */\n  async checkEnd() {\n    if (this.items) {\n      this.checkRange(this.lastItemLen);\n    }\n  }\n  updateVirtualScroll() {\n    // do nothing if virtual-scroll is disabled\n    if (!this.isEnabled || !this.scrollEl) {\n      return;\n    }\n    // unschedule future updates\n    if (this.timerUpdate) {\n      clearTimeout(this.timerUpdate);\n      this.timerUpdate = undefined;\n    }\n    // schedule DOM operations into the stencil queue\n    readTask(this.readVS.bind(this));\n    writeTask(this.writeVS.bind(this));\n  }\n  readVS() {\n    const { contentEl, scrollEl, el } = this;\n    let topOffset = 0;\n    let node = el;\n    while (node !== null && node !== contentEl) {\n      topOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n    this.viewportOffset = topOffset;\n    if (scrollEl) {\n      this.viewportHeight = scrollEl.offsetHeight;\n      this.currentScrollTop = scrollEl.scrollTop;\n    }\n  }\n  writeVS() {\n    const dirtyIndex = this.indexDirty;\n    // get visible viewport\n    const scrollTop = this.currentScrollTop - this.viewportOffset;\n    const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n    // compute lazily the height index\n    const heightIndex = this.getHeightIndex();\n    // get array bounds of visible cells base in the viewport\n    const range = getRange(heightIndex, viewport, 2);\n    // fast path, do nothing\n    const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n    if (!shouldUpdate) {\n      return;\n    }\n    this.range = range;\n    // in place mutation of the virtual DOM\n    updateVDom(this.virtualDom, heightIndex, this.cells, range);\n    // Write DOM\n    // Different code paths taken depending of the render API used\n    if (this.nodeRender) {\n      doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n    }\n    else if (this.domRender) {\n      this.domRender(this.virtualDom);\n    }\n    else if (this.renderItem) {\n      forceUpdate(this);\n    }\n  }\n  updateCellHeight(cell, node) {\n    const update = () => {\n      if (node['$ionCell'] === cell) {\n        const style = window.getComputedStyle(node);\n        const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n        this.setCellHeight(cell, height);\n      }\n    };\n    if (node) {\n      componentOnReady(node, update);\n    }\n    else {\n      update();\n    }\n  }\n  setCellHeight(cell, height) {\n    const index = cell.i;\n    // the cell might changed since the height update was scheduled\n    if (cell !== this.cells[index]) {\n      return;\n    }\n    if (cell.height !== height || cell.visible !== true) {\n      cell.visible = true;\n      cell.height = height;\n      this.indexDirty = Math.min(this.indexDirty, index);\n      this.scheduleUpdate();\n    }\n  }\n  scheduleUpdate() {\n    clearTimeout(this.timerUpdate);\n    this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n  }\n  updateState() {\n    const shouldEnable = !!(this.scrollEl && this.cells.length > 0);\n    if (shouldEnable !== this.isEnabled) {\n      this.enableScrollEvents(shouldEnable);\n      if (shouldEnable) {\n        this.updateVirtualScroll();\n      }\n    }\n  }\n  calcCells() {\n    if (!this.items) {\n      return;\n    }\n    this.lastItemLen = this.items.length;\n    this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n    this.indexDirty = 0;\n  }\n  getHeightIndex() {\n    if (this.indexDirty !== Infinity) {\n      this.calcHeightIndex(this.indexDirty);\n    }\n    return this.heightIndex;\n  }\n  calcHeightIndex(index = 0) {\n    // TODO: optimize, we don't need to calculate all the cells\n    this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n    this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n    this.indexDirty = Infinity;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.rmEvent) {\n      this.rmEvent();\n      this.rmEvent = undefined;\n    }\n    const scrollEl = this.scrollEl;\n    if (scrollEl) {\n      this.isEnabled = shouldListen;\n      scrollEl.addEventListener('scroll', this.onScroll);\n      this.rmEvent = () => {\n        scrollEl.removeEventListener('scroll', this.onScroll);\n      };\n    }\n  }\n  renderVirtualNode(node) {\n    const { type, value, index } = node.cell;\n    switch (type) {\n      case CELL_TYPE_ITEM:\n        return this.renderItem(value, index);\n      case CELL_TYPE_HEADER:\n        return this.renderHeader(value, index);\n      case CELL_TYPE_FOOTER:\n        return this.renderFooter(value, index);\n    }\n  }\n  render() {\n    return (h(Host, { style: {\n        height: `${this.totalHeight}px`,\n      } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map((node) => this.renderVirtualNode(node))))));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"itemHeight\": [\"itemsChanged\"],\n    \"headerHeight\": [\"itemsChanged\"],\n    \"footerHeight\": [\"itemsChanged\"],\n    \"items\": [\"itemsChanged\"]\n  }; }\n  static get style() { return virtualScrollCss; }\n}, [0, \"ion-virtual-scroll\", {\n    \"approxItemHeight\": [2, \"approx-item-height\"],\n    \"approxHeaderHeight\": [2, \"approx-header-height\"],\n    \"approxFooterHeight\": [2, \"approx-footer-height\"],\n    \"headerFn\": [16],\n    \"footerFn\": [16],\n    \"items\": [16],\n    \"itemHeight\": [16],\n    \"headerHeight\": [16],\n    \"footerHeight\": [16],\n    \"renderItem\": [16],\n    \"renderHeader\": [16],\n    \"renderFooter\": [16],\n    \"nodeRender\": [16],\n    \"domRender\": [16],\n    \"totalHeight\": [32],\n    \"positionForItem\": [64],\n    \"checkRange\": [64],\n    \"checkEnd\": [64]\n  }, [[9, \"resize\", \"onResize\"]]]);\nconst VirtualProxy = ({ dom }, children, utils) => {\n  return utils.map(children, (child, i) => {\n    const node = dom[i];\n    const vattrs = child.vattrs || {};\n    let classes = vattrs.class || '';\n    classes += 'virtual-item ';\n    if (!node.visible) {\n      classes += 'virtual-loading';\n    }\n    return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: `translate3d(0,${node.top}px,0)` }) }) });\n  });\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-virtual-scroll\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-virtual-scroll\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, VirtualScroll);\n      }\n      break;\n  } });\n}\n\nconst IonVirtualScroll = VirtualScroll;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonVirtualScroll, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { m as menuController } from './index5.js';\nimport { u as updateVisibility } from './menu-toggle-util.js';\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\nconst MenuToggle = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    this.autoHide = true;\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return h(Host, {\n      onClick: this.onClick,\n      \"aria-hidden\": hidden ? 'true' : null,\n      class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden\n      }\n    }, h(\"slot\", null));\n  }\n  static get style() {\n    return menuToggleCss;\n  }\n}, [1, \"ion-menu-toggle\", {\n  \"menu\": [1],\n  \"autoHide\": [4, \"auto-hide\"],\n  \"visible\": [32]\n}, [[16, \"ionMenuChange\", \"visibilityChanged\"], [16, \"ionSplitPaneVisible\", \"visibilityChanged\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu-toggle\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-menu-toggle\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, MenuToggle);\n        }\n        break;\n    }\n  });\n}\nconst IonMenuToggle = MenuToggle;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonMenuToggle, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","h","Host","b","getIonMode","m","menuController","u","updateVisibility","menuToggleCss","MenuToggle","constructor","__registerHost","__attachShadow","visible","autoHide","onClick","toggle","menu","connectedCallback","visibilityChanged","render","mode","hidden","class","style","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonMenuToggle","defineCustomElement"],"sources":["/Users/aliciamedina/Library/Mobile Documents/com~apple~CloudDocs/Work/Proyecto Fin Grado/Electron/Ionic/Chatty-iOS/node_modules/@ionic/core/components/ion-menu-toggle.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { m as menuController } from './index5.js';\nimport { u as updateVisibility } from './menu-toggle-util.js';\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\n\nconst MenuToggle = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.visible = false;\n    /**\n     * Automatically hides the content when the corresponding menu is not active.\n     *\n     * By default, it's `true`. Change it to `false` in order to\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\n     */\n    this.autoHide = true;\n    this.onClick = () => {\n      return menuController.toggle(this.menu);\n    };\n  }\n  connectedCallback() {\n    this.visibilityChanged();\n  }\n  async visibilityChanged() {\n    this.visible = await updateVisibility(this.menu);\n  }\n  render() {\n    const mode = getIonMode(this);\n    const hidden = this.autoHide && !this.visible;\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n        [mode]: true,\n        'menu-toggle-hidden': hidden,\n      } }, h(\"slot\", null)));\n  }\n  static get style() { return menuToggleCss; }\n}, [1, \"ion-menu-toggle\", {\n    \"menu\": [1],\n    \"autoHide\": [4, \"auto-hide\"],\n    \"visible\": [32]\n  }, [[16, \"ionMenuChange\", \"visibilityChanged\"], [16, \"ionSplitPaneVisible\", \"visibilityChanged\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu-toggle\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-menu-toggle\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, MenuToggle);\n      }\n      break;\n  } });\n}\n\nconst IonMenuToggle = MenuToggle;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonMenuToggle, defineCustomElement };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAkB,EAAEC,WAAW,EAAEC,CAAC,EAAEC,IAAI,QAAQ,+BAA+B;AACxF,SAASC,CAAC,IAAIC,UAAU,QAAQ,mBAAmB;AACnD,SAASC,CAAC,IAAIC,cAAc,QAAQ,aAAa;AACjD,SAASC,CAAC,IAAIC,gBAAgB,QAAQ,uBAAuB;AAE7D,MAAMC,aAAa,GAAG,0CAA0C;AAEhE,MAAMC,UAAU,GAAG,aAAcX,kBAAkB,CAAC,cAAcC,WAAW,CAAC;EAC5EW,WAAWA,CAAA,EAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,MAAM;MACnB,OAAOV,cAAc,CAACW,MAAM,CAAC,IAAI,CAACC,IAAI,CAAC;IACzC,CAAC;EACH;EACAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EACA,MAAMA,iBAAiBA,CAAA,EAAG;IACxB,IAAI,CAACN,OAAO,GAAG,MAAMN,gBAAgB,CAAC,IAAI,CAACU,IAAI,CAAC;EAClD;EACAG,MAAMA,CAAA,EAAG;IACP,MAAMC,IAAI,GAAGlB,UAAU,CAAC,IAAI,CAAC;IAC7B,MAAMmB,MAAM,GAAG,IAAI,CAACR,QAAQ,IAAI,CAAC,IAAI,CAACD,OAAO;IAC7C,OAAQb,CAAC,CAACC,IAAI,EAAE;MAAEc,OAAO,EAAE,IAAI,CAACA,OAAO;MAAE,aAAa,EAAEO,MAAM,GAAG,MAAM,GAAG,IAAI;MAAEC,KAAK,EAAE;QACnF,CAACF,IAAI,GAAG,IAAI;QACZ,oBAAoB,EAAEC;MACxB;IAAE,CAAC,EAAEtB,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;EACzB;EACA,WAAWwB,KAAKA,CAAA,EAAG;IAAE,OAAOhB,aAAa;EAAE;AAC7C,CAAC,EAAE,CAAC,CAAC,EAAE,iBAAiB,EAAE;EACtB,MAAM,EAAE,CAAC,CAAC,CAAC;EACX,UAAU,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC;EAC5B,SAAS,EAAE,CAAC,EAAE;AAChB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,eAAe,EAAE,mBAAmB,CAAC,EAAE,CAAC,EAAE,EAAE,qBAAqB,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACrG,SAASiB,qBAAqBA,CAAA,EAAG;EAC/B,IAAI,OAAOC,cAAc,KAAK,WAAW,EAAE;IACzC;EACF;EACA,MAAMC,UAAU,GAAG,CAAC,iBAAiB,CAAC;EACtCA,UAAU,CAACC,OAAO,CAACC,OAAO,IAAI;IAAE,QAAQA,OAAO;MAC7C,KAAK,iBAAiB;QACpB,IAAI,CAACH,cAAc,CAACI,GAAG,CAACD,OAAO,CAAC,EAAE;UAChCH,cAAc,CAACK,MAAM,CAACF,OAAO,EAAEpB,UAAU,CAAC;QAC5C;QACA;IAAM;EACR,CAAC,CAAC;AACN;AAEA,MAAMuB,aAAa,GAAGvB,UAAU;AAChC,MAAMwB,mBAAmB,GAAGR,qBAAqB;AAEjD,SAASO,aAAa,EAAEC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = process.env.NODE_ENV === 'production' ? null : (() => {\n  // Don't overwrite this value if it's already set.\n  // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n  if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n    self.__WB_DISABLE_DEV_LOGS = false;\n  }\n  let inGroup = false;\n  const methodToColorMap = {\n    debug: `#7f8c8d`,\n    log: `#2ecc71`,\n    warn: `#f39c12`,\n    error: `#c0392b`,\n    groupCollapsed: `#3498db`,\n    groupEnd: null\n  };\n  const print = function (method, args) {\n    if (self.__WB_DISABLE_DEV_LOGS) {\n      return;\n    }\n    if (method === 'groupCollapsed') {\n      // Safari doesn't print all console.groupCollapsed() arguments:\n      // https://bugs.webkit.org/show_bug.cgi?id=182754\n      if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n        console[method](...args);\n        return;\n      }\n    }\n    const styles = [`background: ${methodToColorMap[method]}`, `border-radius: 0.5em`, `color: white`, `font-weight: bold`, `padding: 2px 0.5em`];\n    // When in a group, the workbox prefix is not displayed.\n    const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n    console[method](...logPrefix, ...args);\n    if (method === 'groupCollapsed') {\n      inGroup = true;\n    }\n    if (method === 'groupEnd') {\n      inGroup = false;\n    }\n  };\n  const api = {};\n  const loggerMethods = Object.keys(methodToColorMap);\n  for (const key of loggerMethods) {\n    const method = key;\n    api[method] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      print(method, args);\n    };\n  }\n  return api;\n})();\nexport { logger };","map":{"version":3,"names":["logger","process","env","NODE_ENV","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","_len","arguments","length","Array","_key"],"sources":["/Users/aliciamedina/Library/Mobile Documents/com~apple~CloudDocs/Work/Proyecto Fin Grado/Electron/Ionic/Chatty-iOS/node_modules/workbox-core/_private/logger.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB,MAAMA,MAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,IAAI,GAAG,CAAC,MAAM;EAClE;EACA;EACA,IAAI,EAAE,uBAAuB,IAAIC,IAAI,CAAC,EAAE;IACpCA,IAAI,CAACC,qBAAqB,GAAG,KAAK;EACtC;EACA,IAAIC,OAAO,GAAG,KAAK;EACnB,MAAMC,gBAAgB,GAAG;IACrBC,KAAK,EAAG,SAAQ;IAChBC,GAAG,EAAG,SAAQ;IACdC,IAAI,EAAG,SAAQ;IACfC,KAAK,EAAG,SAAQ;IAChBC,cAAc,EAAG,SAAQ;IACzBC,QAAQ,EAAE;EACd,CAAC;EACD,MAAMC,KAAK,GAAG,SAAAA,CAAUC,MAAM,EAAEC,IAAI,EAAE;IAClC,IAAIZ,IAAI,CAACC,qBAAqB,EAAE;MAC5B;IACJ;IACA,IAAIU,MAAM,KAAK,gBAAgB,EAAE;MAC7B;MACA;MACA,IAAI,gCAAgC,CAACE,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,EAAE;QAC5DC,OAAO,CAACL,MAAM,CAAC,CAAC,GAAGC,IAAI,CAAC;QACxB;MACJ;IACJ;IACA,MAAMK,MAAM,GAAG,CACV,eAAcd,gBAAgB,CAACQ,MAAM,CAAE,EAAC,EACxC,sBAAqB,EACrB,cAAa,EACb,mBAAkB,EAClB,oBAAmB,CACvB;IACD;IACA,MAAMO,SAAS,GAAGhB,OAAO,GAAG,EAAE,GAAG,CAAC,WAAW,EAAEe,MAAM,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;IAChEH,OAAO,CAACL,MAAM,CAAC,CAAC,GAAGO,SAAS,EAAE,GAAGN,IAAI,CAAC;IACtC,IAAID,MAAM,KAAK,gBAAgB,EAAE;MAC7BT,OAAO,GAAG,IAAI;IAClB;IACA,IAAIS,MAAM,KAAK,UAAU,EAAE;MACvBT,OAAO,GAAG,KAAK;IACnB;EACJ,CAAC;EACD,MAAMkB,GAAG,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACpB,gBAAgB,CAAC;EACnD,KAAK,MAAMqB,GAAG,IAAIH,aAAa,EAAE;IAC7B,MAAMV,MAAM,GAAGa,GAAG;IAClBJ,GAAG,CAACT,MAAM,CAAC,GAAG,YAAa;MAAA,SAAAc,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATf,IAAI,OAAAgB,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAAJjB,IAAI,CAAAiB,IAAA,IAAAH,SAAA,CAAAG,IAAA;MAAA;MAClBnB,KAAK,CAACC,MAAM,EAAEC,IAAI,CAAC;IACvB,CAAC;EACL;EACA,OAAOQ,GAAG;AACd,CAAC,GAAI;AACL,SAASxB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
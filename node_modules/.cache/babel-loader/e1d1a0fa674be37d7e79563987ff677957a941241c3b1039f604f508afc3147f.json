{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { n as getAriaLabel, e as renderHiddenInput } from './helpers.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\nconst Checkbox = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = ev => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const {\n      color,\n      checked,\n      disabled,\n      el,\n      indeterminate,\n      inputId,\n      name,\n      value\n    } = this;\n    const mode = getIonMode(this);\n    const {\n      label,\n      labelId,\n      labelText\n    } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    let path = indeterminate ? h(\"path\", {\n      d: \"M6 12L18 12\",\n      part: \"mark\"\n    }) : h(\"path\", {\n      d: \"M5.9,12.5l3.8,3.8l8.8-8.8\",\n      part: \"mark\"\n    });\n    if (mode === 'md') {\n      path = indeterminate ? h(\"path\", {\n        d: \"M2 12H22\",\n        part: \"mark\"\n      }) : h(\"path\", {\n        d: \"M1.73,12.91 8.1,19.28 22.79,4.59\",\n        part: \"mark\"\n      });\n    }\n    return h(Host, {\n      onClick: this.onClick,\n      \"aria-labelledby\": label ? labelId : null,\n      \"aria-checked\": `${checked}`,\n      \"aria-hidden\": disabled ? 'true' : null,\n      role: \"checkbox\",\n      class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        interactive: true\n      })\n    }, h(\"svg\", {\n      class: \"checkbox-icon\",\n      viewBox: \"0 0 24 24\",\n      part: \"container\"\n    }, path), h(\"label\", {\n      htmlFor: inputId\n    }, labelText), h(\"input\", {\n      type: \"checkbox\",\n      \"aria-checked\": `${checked}`,\n      disabled: disabled,\n      id: inputId,\n      onFocus: () => this.onFocus(),\n      onBlur: () => this.onBlur(),\n      ref: focusEl => this.focusEl = focusEl\n    }));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"checked\": [\"checkedChanged\"],\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: checkboxIosCss,\n      md: checkboxMdCss\n    };\n  }\n}, [33, \"ion-checkbox\", {\n  \"color\": [513],\n  \"name\": [1],\n  \"checked\": [1028],\n  \"indeterminate\": [1028],\n  \"disabled\": [4],\n  \"value\": [8]\n}]);\nlet checkboxIds = 0;\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-checkbox\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-checkbox\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Checkbox);\n        }\n        break;\n    }\n  });\n}\nexport { Checkbox as C, defineCustomElement as d };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","n","getAriaLabel","e","renderHiddenInput","c","createColorClasses","hostContext","checkboxIosCss","checkboxMdCss","Checkbox","constructor","__registerHost","__attachShadow","ionChange","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","ev","preventDefault","setFocus","onFocus","emit","onBlur","componentWillLoad","emitStyle","checkedChanged","isChecked","disabledChanged","focusEl","focus","render","color","el","mode","label","labelId","labelText","path","d","part","role","class","interactive","viewBox","htmlFor","type","id","ref","watchers","style","ios","md","defineCustomElement","customElements","components","forEach","tagName","get","define","C"],"sources":["/Users/aliciamedina/Library/Mobile Documents/com~apple~CloudDocs/Work/Proyecto Fin Grado/Electron/Ionic/Chatty-iOS/node_modules/@ionic/core/components/checkbox.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { n as getAriaLabel, e as renderHiddenInput } from './helpers.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value,\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n    if (mode === 'md') {\n      path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        interactive: true,\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) })));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: checkboxIosCss,\n    md: checkboxMdCss\n  }; }\n}, [33, \"ion-checkbox\", {\n    \"color\": [513],\n    \"name\": [1],\n    \"checked\": [1028],\n    \"indeterminate\": [1028],\n    \"disabled\": [4],\n    \"value\": [8]\n  }]);\nlet checkboxIds = 0;\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-checkbox\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-checkbox\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Checkbox);\n      }\n      break;\n  } });\n}\n\nexport { Checkbox as C, defineCustomElement as d };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
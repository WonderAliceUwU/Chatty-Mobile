{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nconst RadioGroup = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = value => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => radio.value === value && !radio.disabled);\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = ev => {\n      ev.preventDefault();\n      /**\n       * The Radio Group component mandates that only one radio button\n       * within the group can be selected at any given time. Since `ion-radio`\n       * is a shadow DOM component, it cannot natively perform this behavior\n       * using the `name` attribute.\n       */\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        } else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({\n      value\n    });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = this.label = header.querySelector('ion-label');\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    // TODO(FW-2832): type\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter(radio => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  render() {\n    const {\n      label,\n      labelId\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, {\n      role: \"radiogroup\",\n      \"aria-labelledby\": label ? labelId : null,\n      onClick: this.onClick,\n      class: mode\n    });\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"]\n    };\n  }\n}, [0, \"ion-radio-group\", {\n  \"allowEmptySelection\": [4, \"allow-empty-selection\"],\n  \"name\": [1],\n  \"value\": [1032]\n}, [[4, \"keydown\", \"onKeydown\"]]]);\nlet radioGroupIds = 0;\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-radio-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-radio-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, RadioGroup);\n        }\n        break;\n    }\n  });\n}\nexport { RadioGroup as R, defineCustomElement as d };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","RadioGroup","constructor","__registerHost","ionChange","inputId","radioGroupIds","labelId","allowEmptySelection","name","setRadioTabindex","value","radios","getRadios","first","find","radio","disabled","checked","focusable","tabindex","setButtonTabindex","onClick","ev","preventDefault","selectedRadio","target","closest","currentValue","newValue","undefined","valueChanged","emit","componentDidLoad","connectedCallback","header","el","querySelector","label","id","Array","from","querySelectorAll","onKeydown","inSelectPopover","contains","filter","includes","index","findIndex","current","next","code","length","setFocus","render","mode","role","class","watchers","defineCustomElement","customElements","components","forEach","tagName","get","define","R","d"],"sources":["/Users/aliciamedina/Library/Mobile Documents/com~apple~CloudDocs/Work/Proyecto Fin Grado/Electron/Ionic/Chatty-iOS/node_modules/@ionic/core/components/radio-group.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst RadioGroup = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find((radio) => !radio.disabled);\n      const checked = radios.find((radio) => radio.value === value && !radio.disabled);\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      /**\n       * The Radio Group component mandates that only one radio button\n       * within the group can be selected at any given time. Since `ion-radio`\n       * is a shadow DOM component, it cannot natively perform this behavior\n       * using the `name` attribute.\n       */\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = (this.label = header.querySelector('ion-label'));\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    // TODO(FW-2832): type\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter((radio) => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex((radio) => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  render() {\n    const { label, labelId } = this;\n    const mode = getIonMode(this);\n    return h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode });\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n}, [0, \"ion-radio-group\", {\n    \"allowEmptySelection\": [4, \"allow-empty-selection\"],\n    \"name\": [1],\n    \"value\": [1032]\n  }, [[4, \"keydown\", \"onKeydown\"]]]);\nlet radioGroupIds = 0;\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-radio-group\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-radio-group\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, RadioGroup);\n      }\n      break;\n  } });\n}\n\nexport { RadioGroup as R, defineCustomElement as d };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}